openapi: 3.0.3
info:
  title: pws
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://file-ws.test'
paths:
  /api/documentation:
    get:
      summary: 'Display Swagger API page.'
      operationId: displaySwaggerAPIPage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>L5 Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://file-ws.test/docs/asset/swagger-ui.css?v=fd5df98cfc0e58ed507042cd86a1f1df\">\n    <link rel=\"icon\" type=\"image/png\" href=\"http://file-ws.test/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"/>\n    <link rel=\"icon\" type=\"image/png\" href=\"http://file-ws.test/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"/>\n    <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n    </style>\n    </head>\n\n<body >\n<div id=\"swagger-ui\"></div>\n\n<script src=\"http://file-ws.test/docs/asset/swagger-ui-bundle.js?v=bccc97f77bdb8edc590ae3abdf83b9a7\"></script>\n<script src=\"http://file-ws.test/docs/asset/swagger-ui-standalone-preset.js?v=861c3618a16aefc88e19a052836718e5\"></script>\n<script>\n    window.onload = function() {\n        // Build a system\n        const ui = SwaggerUIBundle({\n            dom_id: '#swagger-ui',\n            url: \"http://file-ws.test/docs/api-docs.json\",\n            operationsSorter: null,\n            configUrl: null,\n            validatorUrl: null,\n            oauth2RedirectUrl: \"http://file-ws.test/api/oauth2-callback\",\n\n            requestInterceptor: function(request) {\n                request.headers['X-CSRF-TOKEN'] = '';\n                return request;\n            },\n\n            presets: [\n                SwaggerUIBundle.presets.apis,\n                SwaggerUIStandalonePreset\n            ],\n\n            plugins: [\n                SwaggerUIBundle.plugins.DownloadUrl\n            ],\n\n            layout: \"StandaloneLayout\",\n            docExpansion : \"none\",\n            deepLinking: true,\n            filter: true,\n            persistAuthorization: \"false\",\n\n        })\n\n        window.ui = ui\n\n            }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
      security: []
  /api/oauth2-callback:
    get:
      summary: 'Display Oauth2 callback pages.'
      operationId: displayOauth2CallbackPages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!doctype html>\n<html lang=\"en-US\">\n<head>\n    <title>Swagger UI: OAuth2 Redirect</title>\n</head>\n<body>\n<script>\n    'use strict';\n    function run () {\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\n        var sentState = oauth2.state;\n        var redirectUrl = oauth2.redirectUrl;\n        var isValid, qp, arr;\n\n        if (/code|token|error/.test(window.location.hash)) {\n            qp = window.location.hash.substring(1).replace('?', '&');\n        } else {\n            qp = location.search.substring(1);\n        }\n\n        arr = qp.split(\"&\");\n        arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\n        qp = qp ? JSON.parse('{' + arr.join() + '}',\n                function (key, value) {\n                    return key === \"\" ? value : decodeURIComponent(value);\n                }\n        ) : {};\n\n        isValid = qp.state === sentState;\n\n        if ((\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n        ) && !oauth2.auth.code) {\n            if (!isValid) {\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"warning\",\n                    message: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n                });\n            }\n\n            if (qp.code) {\n                delete oauth2.state;\n                oauth2.auth.code = qp.code;\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n            } else {\n                let oauthErrorMsg;\n                if (qp.error) {\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n                }\n\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"error\",\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n                });\n            }\n        } else {\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n        }\n        window.close();\n    }\n\n    if (document.readyState !== 'loading') {\n        run();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            run();\n        });\n    }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
      security: []
  /api/files:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: order_id
          description: 'required_without:session_id The ID of the order.'
          example: '1'
          required: false
          schema:
            type: string
            description: 'required_without:session_id The ID of the order.'
            example: '1'
            nullable: false
        -
          in: query
          name: file_type
          description: 'The type of the file.'
          example: invoice
          required: true
          schema:
            type: string
            description: 'The type of the file.'
            example: invoice
            nullable: false
        -
          in: query
          name: session_id
          description: 'required_without:order_id The session ID.'
          example: abc123
          required: false
          schema:
            type: string
            description: 'required_without:order_id The session ID.'
            example: abc123
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      user_id: 1
                      order_id: 1
                      file_name: example.pdf
                      file_path: path/to/example.pdf
                      file_type: invoice
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        order_id: 1
                        file_name: example.pdf
                        file_path: path/to/example.pdf
                        file_type: invoice
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        order_id:
                          type: integer
                          example: 1
                        file_name:
                          type: string
                          example: example.pdf
                        file_path:
                          type: string
                          example: path/to/example.pdf
                        file_type:
                          type: string
                          example: invoice
      tags:
        - 'File Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: 'This field is required when <code>session_id</code> is not present.'
                  example: null
                  nullable: false
                file_type:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                session_id:
                  type: string
                  description: 'This field is required when <code>order_id</code> is not present.'
                  example: null
                  nullable: false
              required:
                - file_type
      security: []
  '/api/file/{fileId}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    user_id: 1
                    order_id: 1
                    file_name: example.pdf
                    file_path: path/to/example.pdf
                    file_type: invoice
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      order_id:
                        type: integer
                        example: 1
                      file_name:
                        type: string
                        example: example.pdf
                      file_path:
                        type: string
                        example: path/to/example.pdf
                      file_type:
                        type: string
                        example: invoice
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found'
                properties:
                  message:
                    type: string
                    example: 'Not Found'
      tags:
        - 'File Management'
      security: []
    parameters:
      -
        in: path
        name: fileId
        description: 'The ID of the file.'
        example: 1
        required: true
        schema:
          type: integer
  /api/files/upload:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'invoice files uploaded successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'invoice files uploaded successfully'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No file uploaded'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No file uploaded'
      tags:
        - 'File Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The ID of the user.'
                  example: 1
                  nullable: false
                order_id:
                  type: integer
                  description: 'The ID of the order.'
                  example: 1
                  nullable: false
                session_id:
                  type: string
                  description: 'The session ID.'
                  example: 53fc529b-f438-49cc-8e42-959400cbd1c1
                  nullable: true
                file_type:
                  type: string
                  description: 'The type of the file.'
                  example: invoice
                  nullable: false
                files:
                  type: array
                  description: 'The files to be uploaded.'
                  example:
                    - non
                  items:
                    type: string
                base64_files:
                  type: array
                  description: 'The base64 encoded files to be uploaded.'
                  example:
                    - omnis
                  items:
                    type: string
              required:
                - user_id
                - order_id
                - file_type
      security: []
  /api/move/temp/to/permanent:
    post:
      summary: 'Move files to permanent storage.'
      operationId: moveFilesToPermanentStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Files moved to permanent storage successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Files moved to permanent storage successfully'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error'
      tags:
        - 'File Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
                  description: 'The session ID.'
                  example: abc123
                  nullable: false
                order_id:
                  type: integer
                  description: 'The ID of the order.'
                  example: 1
                  nullable: false
                user_id:
                  type: integer
                  description: 'The ID of the user.'
                  example: 1
                  nullable: false
                file_type:
                  type: string
                  description: 'The type of the file.'
                  example: invoice
                  nullable: false
              required:
                - session_id
                - order_id
                - user_id
                - file_type
      security: []
  /api/temp/files/upload:
    post:
      summary: 'Temporarily store a newly created resource in storage.'
      operationId: temporarilyStoreANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'invoice files uploaded temporarily with session ID'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'invoice files uploaded temporarily with session ID'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No file uploaded'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No file uploaded'
      tags:
        - 'File Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The ID of the user. This field is required when <code>session_id</code> is not present.'
                  example: 1
                  nullable: false
                order_id:
                  type: string
                  description: 'The ID of the order. This field is required when <code>session_id</code> is not present.'
                  example: 1
                  nullable: false
                session_id:
                  type: string
                  description: 'The session ID.'
                  example: abc123
                  nullable: true
                file_type:
                  type: string
                  description: 'The type of the file.'
                  example: invoice
                  nullable: false
                files:
                  type: array
                  description: 'The files to be uploaded.'
                  example:
                    - fugit
                  items:
                    type: string
                base64_files:
                  type: array
                  description: 'The base64 encoded files to be uploaded.'
                  example:
                    - velit
                  items:
                    type: string
              required:
                - session_id
                - file_type
      security: []
  '/api/download/{file_id}':
    get:
      summary: 'Download the specified resource.'
      operationId: downloadTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'application/octet-stream The file download.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found'
                properties:
                  message:
                    type: string
                    example: 'Not Found'
      tags:
        - 'File Management'
      security: []
    parameters:
      -
        in: path
        name: file_id
        description: 'The ID of the file.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: file
        description: 'The ID of the file.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/file/destroy/{file_id}':
    post:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        204:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found'
                properties:
                  message:
                    type: string
                    example: 'Not Found'
      tags:
        - 'File Management'
      security: []
    parameters:
      -
        in: path
        name: file_id
        description: 'The ID of the file.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: file
        description: 'The ID of the file.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'File Management'
    description: ''
